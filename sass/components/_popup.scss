.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, 0.3);
  z-index: 9999;
  opacity: 0; //con esto solo activado, el texto y el contenido siguen estando. presentes
  visibility: hidden; //conseguimos al mismo tiempo esconderlo
  transition: all 0.3s;
  position: fixed; //You might've noticed that the browser jumps after closing the popup. If you want it to stay in the exact same place you can give a fixed element (such as our menu button) an id and point the close button to that. Then no matter where you've scrolled on the page you will remain in the same spot after closing the popup.
  //   display: none; //con esta property esto no podemos animarlo

  backdrop-filter: blur(10px);

  &__content {
    @include centerElement;
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    border-radius: $border-radious;
    display: table;
    overflow: hidden; //Para que las imagenes no se sobrepongan sobre los bordes con radio
    opacity: 0;
    // transform: scale(0.5); //Ya tenemos un transform y no podemos tener dos en un mismo bloque, el otro transform viene del mixing centerElement. Por ello cuando queremos dos transform hay que ponerlos juntos.
    transform: translate(-50%, -50%) scale(0.25);
    transition: all 0.5s 0.2s; //El tercer parametro es para darle un peque√±o delay!
  }

  &__left {
    width: 33.3333%;
    // float: left; Vamos a ver una tecnica para que ocupen las imagenes el mismo height, vamos a simular una tabla.
    display: table-cell;
  }
  &__right {
    width: 66.666667%;
    // float: left;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem;
  }
  &__img {
    display: block;
    width: 100%;
  }
  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    column-count: 2; //Crea automaticamente dos columnas
    column-gap: 4rem; // 1em = 14px es el valor por defecto. 1em es siempre el valor del font-size del current element
    column-rule: 1px solid $color-grey-light-2;
    -moz-hyphens: auto; //mozilla
    -ms-hyphens: auto; // edge
    -webkit-hyphens: auto; //chrome y safari
    hyphens: auto; //pone los guiones entre palabras, podemos ponerlos manualmente si queremos...
  }
  //OPEN STATES
  &:target {
    //pseudo class target, which applies to the element which is the target when we click on a button.
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s;
      line-height: 1;
    }

    &:hover {
      color: $color-primary;
    }
  }
}
