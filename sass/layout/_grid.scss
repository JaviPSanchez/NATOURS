.row {
  max-width: $grid-width; //1140px
  margin: 0 auto; // To center always de row in the viewport, to center block elements inside another block element!

  &:not(:last-child) {
    /*
    We select everything except the last child!
    En CSS seria --> .row:not:last-child(){}
    :last-child --> Last child pseudo-class, seleccionamos el ultimo child.
    :not -->  Not pseudo-selector, last column not having the margin.
    */
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 60rem;
    padding: 0 3rem;
  }
  @include respond(phone) {
    max-width: 80rem;
    padding: 0 3rem;
  }

  @include clearfix;

  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    // background-color: orangered;
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      (2 * ((100% - 2 *#{$gutter-horizontal}) / 3) + #{$gutter-horizontal})
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      (2 * ((100% - 3 * #{$gutter-horizontal}) / 4)) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      (3 * ((100% - 3 * #{$gutter-horizontal}) / 4)) + 2 *
        (#{$gutter-horizontal})
    );
  }
}
