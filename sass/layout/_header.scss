.header {
  height: 85vh; //95% of the height of the viewport
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: center;
  position: relative;
  /*
  Con este support query decimos que si soporta el clip-path haga el height de 95vh, pero sino que se quede en 85vh.
*/
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }
  //When the resolution (dots per inch) and the width are higher than 192dpi(2x) and 600px then load hero image, if not hero-small. Las media queries siempre en ems!  600px/16px = 37.5em
  @media only screen and (min-resolution: 192dpi) and (min-width: /*600px*/37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: /*600px*/37.5em),
    only screen and (min-width: /*2000px*/125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url(../img/hero.jpg);
  }
  // @media (min-width: 2000px) {
  //   background-image: linear-gradient(
  //       to right bottom,
  //       rgba($color-primary-light, 0.8),
  //       rgba($color-primary-dark, 0.8)
  //     ),
  //     url(../img/hero.jpg);
  // }

  @include respond(tab-port) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  @include respond(phone) {
    height: 75vh;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 70vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 70vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem; /* 4rem = 40 px */
    left: 4rem;
  }
  &__logo {
    height: 5rem; /* 5rem = 50 px */
  }
  &__logo-box:hover &__logo {
    animation: bounce 1s ease-in;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
